// <auto-generated />
using System;
using Backend.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Backend.Migrations
{
    [DbContext(typeof(AquaContext))]
    [Migration("20210121110500_V4")]
    partial class V4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Backend.Models.Park", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<int>("Capacity")
                        .HasColumnType("int")
                        .HasColumnName("Capacity");

                    b.Property<int>("M")
                        .HasColumnType("int")
                        .HasColumnName("M");

                    b.Property<int>("N")
                        .HasColumnType("int")
                        .HasColumnName("N");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Name");

                    b.HasKey("ID");

                    b.ToTable("Park");
                });

            modelBuilder.Entity("Backend.Models.Pool", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<int>("Capacity")
                        .HasColumnType("int")
                        .HasColumnName("Capacity");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Name");

                    b.Property<int>("NumOfSlides")
                        .HasColumnType("int")
                        .HasColumnName("NumOfSlides");

                    b.Property<int?>("ParkID")
                        .HasColumnType("int");

                    b.Property<int>("X")
                        .HasColumnType("int")
                        .HasColumnName("X");

                    b.Property<int>("Y")
                        .HasColumnType("int")
                        .HasColumnName("Y");

                    b.HasKey("ID");

                    b.HasIndex("ParkID");

                    b.ToTable("Pool");
                });

            modelBuilder.Entity("Backend.Models.Slide", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<int>("NumOfSlides")
                        .HasColumnType("int")
                        .HasColumnName("NumOfSlides");

                    b.Property<int>("PoolID")
                        .HasColumnType("int")
                        .HasColumnName("PoolID");

                    b.Property<string>("Type")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Type");

                    b.HasKey("ID");

                    b.HasIndex("PoolID");

                    b.ToTable("Slide");
                });

            modelBuilder.Entity("Backend.Models.Pool", b =>
                {
                    b.HasOne("Backend.Models.Park", "Park")
                        .WithMany("Pools")
                        .HasForeignKey("ParkID");

                    b.Navigation("Park");
                });

            modelBuilder.Entity("Backend.Models.Slide", b =>
                {
                    b.HasOne("Backend.Models.Pool", "Pool")
                        .WithMany("Slides")
                        .HasForeignKey("PoolID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pool");
                });

            modelBuilder.Entity("Backend.Models.Park", b =>
                {
                    b.Navigation("Pools");
                });

            modelBuilder.Entity("Backend.Models.Pool", b =>
                {
                    b.Navigation("Slides");
                });
#pragma warning restore 612, 618
        }
    }
}
